{% extends 'base.html.twig' %}

{% block body %}
    <section class="section1">
        <div class="container">
            <div class="row">
                <div class="border col-6">
                    <form class="mt-3" action="{{ path('accueil') }}" method="post">
                        <p>Entrez une ville de la région Grand Est</p>
                        <input type="text" name="ville" list="ville" autocomplete="off" onkeyup="showHint(this.value)">
                        <input class="btn-info" type="submit">
                    </form>

                    <datalist id="ville"></datalist>

                    {% if open is not empty %}

                        <div class="row mt-2">
                            <h3 class="text-center">Actuellement à {{ open.location.name }}</h3>
                            {% if donnees is not empty %}
                                <p>Dioxyde d'azote (NO2): {{ donnees.indiceno2 }}</p>
                                <p>Ozone (O3): {{ donnees.indiceo3 }}</p>
                                <p>Particules fines (PM10): {{ donnees.indicepm10 }}</p>
                                <p>Qualité de l'air: {{ donnees.qualiteair }}</p>
                            {% endif %}
                            {% else %}
                                <p style="height: 200px;"></p>
                            {% endif %}
                            <div class="col-6">
                                <img src="{{ open.current.condition.icon }}">
                                <p>{{ open.current.condition.text }}</p>
                                <p>{{ open.current.temp_c }}°C</p>
                            </div>
                            <div class="col-6">
                                <h4>Prévisions</h4>
                                {% for forecast in open.forecast.forecastday %}
                                    <img src="{{ forecast.day.condition.icon }}">
                                    <p>{{ forecast.day.condition.text }}</p>
                                    <p>Minimales {{ forecast.day.mintemp_c }}°C</p>
                                    <p>Maximales {{ forecast.day.maxtemp_c }}°C</p>
                                {% endfor %}
                            </div>
                        </div>

                </div>
                <div id="map" class="border col-6"></div>
            </div>
        </div>
    </section>

    <section class="section3">
        <div class="container">
            <div class="row">
                <div class="border col-12">
                    <p>Tranches d'âge</p>
                    <canvas id="myChart" width="200" height="100"></canvas>
                </div>
            </div>
        </div>
    </section>
    <section class="section3">
        <div class="container">
            <div class="row">
                <div class="border col-12">
                    <p>Sports en plein air</p>
                    <canvas id="doughnut-chart"></canvas>
                </div>
            </div>
        </div>
    </section>
    <section class="section3">
        <div class="container">
            <div class="row">
                <div class="border col-12">
                    <p>Moyens de transport</p>
                    <canvas id="pie-chart"></canvas>
                </div>
            </div>
        </div>
    </section>

    <section class="section4">
        <div class="container">
            <div class="row">
                <div class="border col-12">
                    <p>Newsletter</p>
                    <p>Pour recevoir chaque jour un récapitulatif de la qualité de l'air, vous pouvez vous abonnez à notre Newsletter</p>
                    <div class="container">
                        <div class="row">
                            <div class="border col-5 offset-3">
                                {{ form_start(form) }}
                                {{ form_widget(form) }}
                                {{ form_end(form) }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>



    <style>
        .border{
            border: 1px solid black;
        }
        .section2{
            margin-top: 20px;
        }
        .section3{
            margin-top: 20px;
            margin-bottom: 20px;
        }
        .section4{
            margin-top: 20px;
            margin-bottom: 100px;
        }
        .cadreAPI{
            margin-bottom: 20px;
        }
    </style>

    <script>

        // This sample uses the Place Autocomplete widget to allow the user to search
        // for and select a place. The sample then displays an info window containing
        // the place ID and other information about the place that the user has
        // selected.

        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 48.69980299999999, lng: 6.187807399999997},
                zoom: 6
            });

            var input = document.getElementById('pac-input');

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            var infowindow = new google.maps.InfoWindow();
            var infowindowContent = document.getElementById('infowindow-content');
            infowindow.setContent(infowindowContent);
            var marker = new google.maps.Marker({
                map: map
            });
            marker.addListener('click', function() {
                infowindow.open(map, marker);
            });

            autocomplete.addListener('place_changed', function() {
                infowindow.close();
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    return;
                }

                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);
                }

                // Set the position of the marker using the place ID and location.
                marker.setPlace({
                    placeId: place.place_id,
                    location: place.geometry.location
                });
                marker.setVisible(true);

                infowindowContent.children['place-name'].textContent = place.name;
                infowindowContent.children['place-id'].textContent = place.place_id;
                infowindowContent.children['place-address'].textContent =
                    place.formatted_address;
                infowindow.open(map, marker);
            });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcSv2oPG3tP4f_DFHF_VgyvfhMDTtyFlA&libraries=places&callback=initMap"
            async defer></script>

{% endblock %}
   {% block javascripts %}
       <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.js"></script>
       <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
       <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js"></script>
       <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js"></script>

       <script>

           var ctx = document.getElementById("myChart");
           var myChart = new Chart(ctx, {
               type: 'bar',
               data: {
                   labels: ["Hommes: 18 à 25 ans","Femmes: 18 à 25 ans","Hommes: 25 à 35 ans","Femmes: 25 à 35 ans","Hommes: 35 à 55 ans","Femmes: 35 à 55 ans","Hommes: 55 à 70 ans","Femmes: 55 à 70 ans","Hommes: Plus de 70 ans","Femmes: Plus de 70 ans    "],
                   datasets: [{
                       label: 'Nombre',
                       data: [ {{ nbhommes1825 }},{{ nbfemmes1825 }}, {{ nbhommes2535 }}, {{ nbfemmes2535 }},  {{ nbhommes3555 }},  {{ nbfemmes3555 }},  {{ nbhommes5570 }},{{ nbfemmes5570 }}, {{ nbhommes70 }},{{ nbfemmes70 }}],
                       backgroundColor: [
                           'rgba(54, 162, 235, 0.2)',
                           'rgba(255, 99, 132, 0.2)',
                           'rgba(54, 162, 235, 0.2)',
                           'rgba(255, 99, 132, 0.2)',
                           'rgba(54, 162, 235, 0.2)',
                           'rgba(255, 99, 132, 0.2)',
                           'rgba(54, 162, 235, 0.2)',
                           'rgba(255, 99, 132, 0.2)',
                           'rgba(54, 162, 235, 0.2)',
                           'rgba(255, 99, 132, 0.2)',
                       ],

                       borderColor: [
                           'rgba(54, 162, 235, 1)',
                           'rgba(255,99,132,1)',
                           'rgba(54, 162, 235, 1)',
                           'rgba(255,99,132,1)',
                           'rgba(54, 162, 235, 1)',
                           'rgba(255,99,132,1)',
                           'rgba(54, 162, 235, 1)',
                           'rgba(255,99,132,1)',
                           'rgba(54, 162, 235, 1)',
                           'rgba(255,99,132,1)',
                       ],
                       borderWidth: 1
                   }]
               },
               options: {
                   scales: {
                       yAxes: [{
                           ticks: {
                               beginAtZero:true
                           }
                       }]
                   }
               }
           });
       </script>
       <script>
           new Chart(document.getElementById("doughnut-chart"), {
               type: 'doughnut',
               data: {
                   labels: ["Football", "Course à pied", "Équitation", "Vélo", "Randonnée", "Autre"],
                   datasets: [
                       {
                           label: "Sports",
                           backgroundColor: ["#3e95cd", "#8e5ea2","#3cba9f","#e8c3b9","#c45850","#c40850"],
                           data: [{{ nbFoot }},{{ nbCourse }},{{ nbEquitation }},{{ nbvelo }},{{ nbRandonnee }},{{ nbAutre }}]
                       }
                   ]
               },
               options: {
                   title: {
                       display: true,
                       text: 'Répartition des différents sports de plein-air'
                   }
               }
           });
       </script>
       <script>
           new Chart(document.getElementById("pie-chart"), {
               type: 'pie',
               data: {
                   labels: ["Voiture", "Covoiturage", "Vélo", "À pied", "Transports en commun"],
                   datasets: [{
                       label: "Moyens de transport",
                       backgroundColor: ["#3e95cd","#000ea2", "#8e5ea2","#3cba9f","#e8c3b9"],
                       data: [{{ nbvoiture }},{{ nbCovoiturage }},{{ nbVelo }},{{ nbapied }},{{ nbapied }}]
                   }]
               },
               options: {
                   title: {
                       display: true,
                       text: 'Répartition des différents moyens de transport'
                   }
               }
           });
       </script>

       <script>
           var commune = [];

           {% for commune in tableau %}
           commune.push('{{ commune }}');
           {% endfor %}

           function showHint(str) {

               if (str.length == 0) {
                   document.getElementById("txtHint").innerHTML = "";
                   return;
               } else {
                   var xmlhttp = new XMLHttpRequest();

                   xmlhttp.onreadystatechange = function() {
                       if (this.readyState == 4 && this.status == 200) {
                           for (var i=0; i <  commune.length;++i){
                               str += '<option value="'+commune[i]+'" />';
                           }
                           var my_list = document.getElementById("ville");
                           my_list.innerHTML = str;

                       }
                   };
                   xmlhttp.open("GET", "/test/?q="+str, true);
                   xmlhttp.send();
               }
           }
       </script>
   {% endblock %}